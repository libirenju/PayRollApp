<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="13" passed="8" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-20T22:23:41 IST" name="Suite" finished-at="2022-07-20T22:24:41 IST" duration-ms="60240">
    <groups>
      <group name="Regression">
        <method signature="LoginTest.validLogin()[pri:1, instance:TestCases.LoginTest@4b0d79fc]" name="validLogin" class="TestCases.LoginTest"/>
        <method signature="LoginTest.cancelButton()[pri:7, instance:TestCases.LoginTest@4b0d79fc]" name="cancelButton" class="TestCases.LoginTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2022-07-20T22:23:41 IST" name="Test" finished-at="2022-07-20T22:24:41 IST" duration-ms="60240">
      <class name="TestCases.InvalidLoginTest">
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:28 IST" name="start" finished-at="2022-07-20T22:24:32 IST" duration-ms="3358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="invalidCredentials(java.lang.String,java.lang.String)[pri:1, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:32 IST" name="invalidCredentials" data-provider="getData" finished-at="2022-07-20T22:24:33 IST" duration-ms="1043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentials -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:33 IST" name="close" finished-at="2022-07-20T22:24:33 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:33 IST" name="start" finished-at="2022-07-20T22:24:36 IST" duration-ms="3320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="blankUsername(java.lang.String,java.lang.String)[pri:2, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:36 IST" name="blankUsername" finished-at="2022-07-20T22:24:37 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankUsername -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:37 IST" name="close" finished-at="2022-07-20T22:24:37 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:37 IST" name="start" finished-at="2022-07-20T22:24:40 IST" duration-ms="3285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="blankPassword(java.lang.String,java.lang.String)[pri:3, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:40 IST" name="blankPassword" finished-at="2022-07-20T22:24:41 IST" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[     ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankPassword -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.InvalidLoginTest@48aca48b]" started-at="2022-07-20T22:24:41 IST" name="close" finished-at="2022-07-20T22:24:41 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- TestCases.InvalidLoginTest -->
      <class name="TestCases.LoginTest">
        <test-method is-config="true" signature="loadConfig()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:41 IST" name="loadConfig" finished-at="2022-07-20T22:23:41 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadConfig -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:41 IST" name="start" finished-at="2022-07-20T22:23:50 IST" duration-ms="8727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="validLogin()[pri:1, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:50 IST" name="validLogin" finished-at="2022-07-20T22:23:53 IST" duration-ms="3556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:53 IST" name="close" finished-at="2022-07-20T22:23:53 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:53 IST" name="start" finished-at="2022-07-20T22:23:58 IST" duration-ms="5039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="accessPassLink()[pri:2, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:58 IST" name="accessPassLink" finished-at="2022-07-20T22:23:59 IST" duration-ms="779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessPassLink -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:59 IST" name="close" finished-at="2022-07-20T22:23:59 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:23:59 IST" name="start" finished-at="2022-07-20T22:24:04 IST" duration-ms="4272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="accessEmailField()[pri:3, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:04 IST" name="accessEmailField" finished-at="2022-07-20T22:24:04 IST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessEmailField -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:04 IST" name="close" finished-at="2022-07-20T22:24:04 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:04 IST" name="start" finished-at="2022-07-20T22:24:08 IST" duration-ms="3365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="invalidEmail()[pri:4, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:08 IST" name="invalidEmail" finished-at="2022-07-20T22:24:09 IST" duration-ms="1011" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email is not a valid email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email is not a valid email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at TestCases.LoginTest.invalidEmail(LoginTest.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:09 IST" name="close" finished-at="2022-07-20T22:24:09 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:09 IST" name="start" finished-at="2022-07-20T22:24:12 IST" duration-ms="3492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="blankEmail()[pri:5, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:12 IST" name="blankEmail" finished-at="2022-07-20T22:24:13 IST" duration-ms="1037" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email cannot be blank.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email cannot be blank.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at TestCases.LoginTest.blankEmail(LoginTest.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankEmail -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:13 IST" name="close" finished-at="2022-07-20T22:24:14 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:14 IST" name="start" finished-at="2022-07-20T22:24:17 IST" duration-ms="3321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="invalidEmail1()[pri:6, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:17 IST" name="invalidEmail1" finished-at="2022-07-20T22:24:18 IST" duration-ms="968" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [There is no user with this email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [There is no user with this email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at TestCases.LoginTest.invalidEmail1(LoginTest.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail1 -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:18 IST" name="close" finished-at="2022-07-20T22:24:18 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:18 IST" name="start" finished-at="2022-07-20T22:24:23 IST" duration-ms="5369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="cancelButton()[pri:7, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:23 IST" name="cancelButton" finished-at="2022-07-20T22:24:24 IST" duration-ms="1248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelButton -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:24 IST" name="close" finished-at="2022-07-20T22:24:25 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="start()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:25 IST" name="start" finished-at="2022-07-20T22:24:28 IST" duration-ms="3589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="rememberme()[pri:8, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:28 IST" name="rememberme" finished-at="2022-07-20T22:24:28 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberme -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:28 IST" name="close" finished-at="2022-07-20T22:24:28 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="End()[pri:0, instance:TestCases.LoginTest@4b0d79fc]" started-at="2022-07-20T22:24:41 IST" name="End" finished-at="2022-07-20T22:24:42 IST" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End -->
      </class> <!-- TestCases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
