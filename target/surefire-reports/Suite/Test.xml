<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-LP00NI2V" ignored="2" name="Test" tests="11" failures="3" timestamp="2022-07-23T21:32:56 IST" time="76.331" errors="0">
  <testcase name="validLogin" time="4.137" classname="TestCases.LoginTest"/>
  <testcase name="accessPassLink" time="1.033" classname="TestCases.LoginTest"/>
  <testcase name="accessEmailField" time="1.053" classname="TestCases.LoginTest"/>
  <testcase name="invalidEmail" time="1.175" classname="TestCases.LoginTest">
    <failure type="java.lang.AssertionError" message="expected [Email is not a valid email address.] but found []">
      <![CDATA[java.lang.AssertionError: expected [Email is not a valid email address.] but found []
at TestCases.LoginTest.invalidEmail(LoginTest.java:97)
at java.util.ArrayList.forEach(ArrayList.java:1257)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- invalidEmail -->
  <testcase name="blankEmail" time="1.328" classname="TestCases.LoginTest">
    <failure type="java.lang.AssertionError" message="expected [Email cannot be blank.] but found []">
      <![CDATA[java.lang.AssertionError: expected [Email cannot be blank.] but found []
at TestCases.LoginTest.blankEmail(LoginTest.java:110)
at java.util.ArrayList.forEach(ArrayList.java:1257)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- blankEmail -->
  <testcase name="invalidEmail1" time="1.233" classname="TestCases.LoginTest">
    <failure type="java.lang.AssertionError" message="expected [There is no user with this email address.] but found []">
      <![CDATA[java.lang.AssertionError: expected [There is no user with this email address.] but found []
at TestCases.LoginTest.invalidEmail1(LoginTest.java:123)
at java.util.ArrayList.forEach(ArrayList.java:1257)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- invalidEmail1 -->
  <testcase name="cancelButton" time="1.5" classname="TestCases.LoginTest"/>
  <testcase name="rememberme" time="0.104" classname="TestCases.LoginTest"/>
  <testcase name="invalidCredentials" time="1.17" classname="TestCases.InvalidLoginTest"/>
  <testcase name="blankUsername" time="0.989" classname="TestCases.InvalidLoginTest"/>
  <testcase name="blankPassword" time="1.254" classname="TestCases.InvalidLoginTest"/>
  <testcase name="@BeforeSuite loadConfig" time="0.0" classname="com.payroll.BaseClass.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase name="@AfterSuite End" time="0.0" classname="com.payroll.BaseClass.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterSuite End -->
</testsuite> <!-- Test -->
